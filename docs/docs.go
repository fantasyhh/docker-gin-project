// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-06-17 10:16:11.945201904 +0800 CST m=+0.074290083

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/productlines": {
            "get": {
                "description": "get all productLines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "List productLines",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page num",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Create one productLine by json productLine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "Create a productLine",
                "parameters": [
                    {
                        "description": "create productLine",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            }
        },
        "/api/v1/productlines/{pk}": {
            "get": {
                "description": "Retrieve a productLine by pk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "Retrieve a productLine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductLine",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "Destroy a productLine by pk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "Destroy a productLine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductLine",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a productLine by json productLine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "Update a productLine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductLine",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "partial update productLine",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            }
        },
        "/api/v1/productlines/{pk}/products": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProductLine"
                ],
                "summary": "Product In Line List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductLine",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "description": "get all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page num",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Create one product by json product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create a product",
                "parameters": [
                    {
                        "description": "create product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{pk}": {
            "get": {
                "description": "Retrieve a product by pk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Retrieve a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductCode",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "Destroy a product by pk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Destroy a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductCode",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a product by json product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pk is ProductCode",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "partial update product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.JSONResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/app.FailJSONResult"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "This is a test function",
                "tags": [
                    "PING"
                ],
                "summary": "PING",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.FailJSONResult": {
            "type": "object",
            "properties": {
                "detail ": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "app.JSONResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "required": [
                "MSRP",
                "buyPrice",
                "productCode",
                "productDescription",
                "productLine",
                "productName",
                "productScale",
                "productVendor",
                "quantityInStock"
            ],
            "properties": {
                "MSRP": {
                    "type": "number"
                },
                "buyPrice": {
                    "type": "number"
                },
                "productCode": {
                    "type": "string"
                },
                "productDescription": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "productScale": {
                    "type": "string"
                },
                "productVendor": {
                    "type": "string"
                },
                "quantityInStock": {
                    "type": "integer"
                }
            }
        },
        "models.ProductLine": {
            "type": "object",
            "required": [
                "productLine"
            ],
            "properties": {
                "htmlDescription": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "textDescription": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
